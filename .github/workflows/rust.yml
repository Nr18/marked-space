name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        version: [10, 12, 14]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test 

    # - name: Get Version from Cargo
    #   id: version
    #   run: echo "version=$(cargo metadata --no-deps --format-version 1 | jq '.packages[0].version' -r)" >> $GITHUB_OUTPUT

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: target/release/marked-space${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        retention-days: 5
        if-no-files-found: error
        
  prerelease:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build

    steps:

    # - uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: "target/release/marked-space"
    #     tag: ${{ steps.version.outputs.version }}
    #     draft: true
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ github.token }}
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          ubuntu-latest/marked-space
          windows-latest/marked-space.exe
        